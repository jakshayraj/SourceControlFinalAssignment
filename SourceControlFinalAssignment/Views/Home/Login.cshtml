@model SourceControlFinalAssignment.Models.LoginViewModel

@{
    ViewBag.Title = "Login";
}

<h2>Log In</h2>
@using (Html.BeginForm("Login", "Home", FormMethod.Post, new { @id = "register", enctype = "multipart/form-data", role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @id = "EmailId" } })
            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "Password" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
    

</div>
}



<script>
    var $form = $("form"),
        $successMsg = $(".alert");
    $.validator.addMethod("emailid", function (value, element) {
        return this.optional(element) || (value.match(/^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/));
    });
    $form.validate({
        rules: {
            EmailId: {
                required: true,
                emailid: true
            },
            Password: {
                required: true,
                password: true
            },

        },
        messages: {
            EmailId: "Enter the valid emailid",
            Password: "Please Enter the password"
        },
        submitHandler: function () {
            $successMsg.show();
        }
    });
</script>


